# Requirements para el sistema completo de análisis de imágenes
# Compatible con todos los modelos: BLIP2, LLaVA, Qwen2.5-VL, PaliGemma (Gemma 3)
# Optimizado para AMD 6750XT + Ryzen 7 5700X + 32GB RAM

# ===== DEPENDENCIAS PRINCIPALES =====
# PyTorch (versión compatible con CPU y CUDA)
torch>=2.0.0,<2.5.0
torchvision>=0.15.0
torchaudio>=2.0.0

# Transformers (versión reciente para modelos 2024)
transformers>=4.44.0,<5.0.0

# Aceleración y optimizaciones
accelerate>=0.21.0,<1.0.0
optimum>=1.14.0

# ===== FRAMEWORKS DE MODELOS =====
# Para trabajar con imágenes
Pillow>=9.5.0,<11.0.0

# Para servidores web
flask>=2.3.0,<4.0.0
requests>=2.28.0,<3.0.0

# ===== DEPENDENCIAS ESPECÍFICAS DE MODELOS =====
# Para Qwen2.5-VL y modelos con trust_remote_code
sentencepiece>=0.1.99
protobuf>=3.20.0,<5.0.0

# Para PaliGemma y modelos de Google
einops>=0.7.0

# Tokenizadores y procesamiento de texto
tokenizers>=0.13.0,<1.0.0
safetensors>=0.3.0

# ===== UTILIDADES NUMÉRICAS =====
numpy>=1.24.0,<2.0.0
scipy>=1.10.0

# ===== DESARROLLO Y DEBUGGING =====
# Para monitoreo de sistema
psutil>=5.9.0

# Para logging y debugging
tqdm>=4.65.0

# Para manejo de configuraciones
pyyaml>=6.0

# ===== DEPENDENCIAS OPCIONALES PERO RECOMENDADAS =====
# Para cuantización y optimización de memoria
bitsandbytes>=0.41.0; platform_system != "Windows"

# Para mejores prestaciones con algunos modelos
datasets>=2.14.0

# Para visualización de datos (opcional)
matplotlib>=3.7.0

# ===== DEPENDENCIAS ESPECÍFICAS PARA MODELOS AVANZADOS =====
# Para Qwen-VL específicamente
qwen-vl>=0.1.0

# Para manejo de archivos y cachés
huggingface-hub>=0.16.0,<1.0.0
filelock>=3.12.0

# ===== COMPATIBILIDAD CON DIFERENTES SISTEMAS =====
# Para mejor compatibilidad con diferentes sistemas
typing-extensions>=4.5.0

# Para manejo de imágenes avanzado
opencv-python-headless>=4.8.0,<5.0.0

# ===== NOTAS DE INSTALACIÓN =====
# 
# INSTALACIÓN RECOMENDADA:
# 1. Crear entorno virtual:
#    python -m venv venv
#    source venv/bin/activate  # Linux/Mac
#    venv\Scripts\activate     # Windows
#
# 2. Actualizar pip:
#    pip install --upgrade pip
#
# 3. Instalar dependencias:
#    pip install -r requirements.txt
#
# PARA AMD GPU (OPCIONAL - EXPERIMENTAL):
# pip install torch torchvision --index-url https://download.pytorch.org/whl/rocm5.6
#
# PARA NVIDIA GPU:
# pip install torch torchvision --index-url https://download.pytorch.org/whl/cu121
#
# VERIFICACIÓN:
# python -c "import torch; print(f'PyTorch: {torch.__version__}'); print(f'CUDA: {torch.cuda.is_available()}')"
# python -c "from transformers import AutoProcessor; print('Transformers OK')"
#
# PROBLEMAS COMUNES:
# 
# 1. Error con qwen-vl:
#    pip install qwen-vl --no-deps
#    
# 2. Error con bitsandbytes en Windows:
#    pip install bitsandbytes-windows
#    
# 3. Error de memoria:
#    export PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
#
# 4. Error con transformers muy nuevo:
#    pip install transformers==4.44.2
#
# VERSIONES MÍNIMAS VERIFICADAS:
# - Python: 3.8+
# - PyTorch: 2.0.0+
# - Transformers: 4.35.0+ (recomendado 4.44.0+)
# - RAM: 8GB mínimo, 32GB recomendado
# - Almacenamiento: 50GB libres para todos los modelos
#
# CONFIGURACIÓN PARA TU HARDWARE (AMD 6750XT + Ryzen 7 5700X):
# - Todos los modelos funcionarán en CPU
# - RAM de 32GB permite usar los modelos más grandes
# - Tiempo esperado: 15-45 segundos por análisis dependiendo del modelo